/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// ResourceRequirementApplyConfiguration represents an declarative configuration of the ResourceRequirement type for use
// with apply.
type ResourceRequirementApplyConfiguration struct {
	StorageRequest *string `json:"storageRequest,omitempty"`
	StorageLimit   *string `json:"storageLimit,omitempty"`
	MemoryRequest  *string `json:"memoryRequest,omitempty"`
	MemoryLimit    *string `json:"memoryLimit,omitempty"`
	CpuRequest     *string `json:"cpuRequest,omitempty"`
	CpuLimit       *string `json:"cpuLimit,omitempty"`
}

// ResourceRequirementApplyConfiguration constructs an declarative configuration of the ResourceRequirement type for use with
// apply.
func ResourceRequirement() *ResourceRequirementApplyConfiguration {
	return &ResourceRequirementApplyConfiguration{}
}

// WithStorageRequest sets the StorageRequest field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageRequest field is set to the value of the last call.
func (b *ResourceRequirementApplyConfiguration) WithStorageRequest(value string) *ResourceRequirementApplyConfiguration {
	b.StorageRequest = &value
	return b
}

// WithStorageLimit sets the StorageLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the StorageLimit field is set to the value of the last call.
func (b *ResourceRequirementApplyConfiguration) WithStorageLimit(value string) *ResourceRequirementApplyConfiguration {
	b.StorageLimit = &value
	return b
}

// WithMemoryRequest sets the MemoryRequest field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemoryRequest field is set to the value of the last call.
func (b *ResourceRequirementApplyConfiguration) WithMemoryRequest(value string) *ResourceRequirementApplyConfiguration {
	b.MemoryRequest = &value
	return b
}

// WithMemoryLimit sets the MemoryLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MemoryLimit field is set to the value of the last call.
func (b *ResourceRequirementApplyConfiguration) WithMemoryLimit(value string) *ResourceRequirementApplyConfiguration {
	b.MemoryLimit = &value
	return b
}

// WithCpuRequest sets the CpuRequest field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CpuRequest field is set to the value of the last call.
func (b *ResourceRequirementApplyConfiguration) WithCpuRequest(value string) *ResourceRequirementApplyConfiguration {
	b.CpuRequest = &value
	return b
}

// WithCpuLimit sets the CpuLimit field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CpuLimit field is set to the value of the last call.
func (b *ResourceRequirementApplyConfiguration) WithCpuLimit(value string) *ResourceRequirementApplyConfiguration {
	b.CpuLimit = &value
	return b
}
