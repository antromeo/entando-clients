/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// TagsSpecApplyConfiguration represents an declarative configuration of the TagsSpec type for use
// with apply.
type TagsSpecApplyConfiguration struct {
	Version   *string `json:"version,omitempty"`
	Integrity *string `json:"integrity,omitempty"`
	Shasum    *string `json:"shasum,omitempty"`
	Tarball   *string `json:"tarball,omitempty"`
}

// TagsSpecApplyConfiguration constructs an declarative configuration of the TagsSpec type for use with
// apply.
func TagsSpec() *TagsSpecApplyConfiguration {
	return &TagsSpecApplyConfiguration{}
}

// WithVersion sets the Version field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Version field is set to the value of the last call.
func (b *TagsSpecApplyConfiguration) WithVersion(value string) *TagsSpecApplyConfiguration {
	b.Version = &value
	return b
}

// WithIntegrity sets the Integrity field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Integrity field is set to the value of the last call.
func (b *TagsSpecApplyConfiguration) WithIntegrity(value string) *TagsSpecApplyConfiguration {
	b.Integrity = &value
	return b
}

// WithShasum sets the Shasum field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Shasum field is set to the value of the last call.
func (b *TagsSpecApplyConfiguration) WithShasum(value string) *TagsSpecApplyConfiguration {
	b.Shasum = &value
	return b
}

// WithTarball sets the Tarball field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Tarball field is set to the value of the last call.
func (b *TagsSpecApplyConfiguration) WithTarball(value string) *TagsSpecApplyConfiguration {
	b.Tarball = &value
	return b
}
